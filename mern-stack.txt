Don't forget it is a hidden file inside your home directory (you would not be the first to do a ls -l and thinking it is not there).

Do a: ls -la ~/ | more to see if the file exist, then vim ~/.bashrc

You need to modify PS1 in your shell startup file (probably .bashrc).

If it's there already, its setting will contain \w, which is what gives your working directory.
Change that to \W (upper case). The line in bashrc file looks like below:
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '
Log out and in again

** m001 database
username -- m001-student
password --  m001-mongodb-basics
uri -- mongodb+srv://m001-student:<password>@cluster0.dkemg.mongodb.net/
myFirstDatabase?retryWrites=true&w=majority
**

**Testing my server/api**
Start nodemon server
Open another terminal and run:
curl -v http://localhost:4000/api/v1/restaurants | json

-Background running server: sudo ps aux | grep -i nodemon
sudo kill -9 process_id
sudo kill -9 21793

http://localhost:6000/api/v1/restaurants //output - Hello World

npm uninstall react-router-dom
npm install react-router-dom@5.2.0


**For anyone late to the party, I had a hell of a time getting bootstrap to align the search sections
properly at about 1:39:00. I found that it fills the space to fit the restaurant columns if you set
the input-group divs to just "col-lg" and then add "col" to the "select" item for the dropdown.
Only as I'm writing this do I realize that he also didn't align his dropdown tab, haha. 

Either way, it's something like:
className="input-group col-lg"
className="input-group col-lg"
className="input-group col-lg"
className="col"


Making the select bar a single column tells it to fill the available space, but it gets all wonky if you
don't also remove the "4" from the sizing of the input groups. Still not entirely sure why.
Feedback on if I'm mistaken would be appreciated.

**Such libraries are created for a reason... your code for connecting to a database and querying it,
is considerably more complicated and less maintainable than code that uses the Mongoose library.

** render={(props) => (
    <Login {...props} login={login} />
)}

needs to be changed to

element = { <Login login={login} /> } and it can now render correctly.
There are also the other two similar render things that will need to be changed.

**I had the same problem. I fixed mine by making sure that the react-router-dom dependency
is installed in my frontend folder.

**Route render just won't work for me. So I used useParams() instead. Go to your restaurant file
and add the dependency of useParams from the react-router-dom. After that in the Restaurant
function call a new variable:

let {id} = useParams()

After that change every props.match.params.id with just id.

And finally at app.js change the route element for the path with "/restaurants/:id"  into:

<Route
    path="/restaurants/:id"
    element={<Restaurant user={user}/>}
/> 

I hope this helps. I spent too much time on this tutorial because of many errors like this.
You can use this method to fix the other route/s too.

**2:43:11 if anyone getting error (Message: The specified key does not exist.) 404 not found,
after hosting, then go to hosting setting and set Single-Page Application entrypoint as index.html.

**Took about an extra 2 hours to debug the first 2 hours of video. Thanks to the comments, got some solutions quick.
The ones i missed in comments were:
- The baseURL should not contain "restaurants" after v1, as it's also designated in the react-router-dom paths.
So you get endpoints like "v1/restaurants/restaurants..."
- For some reason, I had to change from localhost:5000 to another number.
[I tried killing nodes with "pkill -f node" and restarting, but only changing localhost number worked. 

To recap some stuff other commentators pointed out:
- Update node and npm to latest versions. 
- Make sure you install some dependencies like react-router-dom on FE
- In the render part of each component, just rewrite the code all together.
The components need to be like <Login login={login} /> .
The video and git are missing the <> and use generic (...props) that does not work (for me).